/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/* from QMK genkactyl
[_QWERTY] = LAYOUT( \
    KC_TAB,   KC_Q,   KC_W,   KC_E,   KC_R,   KC_T,               KC_Y,   KC_U,   KC_I,   KC_O,   KC_P,    KC_LBRC,   \
    LCTL_ESC, KC_A,   KC_S,   KC_D,   KC_F,   KC_G,               KC_H,   KC_J,   KC_K,   KC_L,   KC_SCLN, KC_QUOT,   \
    KC_LSFT,  KC_Z,   KC_X,   KC_C,   KC_V,   KC_B,               KC_N,   KC_M,   KC_COMM,KC_DOT, KC_SLSH, KC_BSLASH, \
    OSFUNC,  HYPER, KC_LBRC,KC_RBRC,                                              HYPER, KC_EQL, KC_MINS, OSFUNC,   \
                            KC_LGUI, KC_SPC, KC_BSPC,        KC_TAB, KC_ENT, LCTL_ESC,                                 \
                            NUMSYM, LCTL_ESC, KC_LALT,         KC_GRV, KC_RALT, KC_RSFT                                  \
),
*/

// #define HYPER LC(A(LSFT))
#define LCTESC &mt LCTRL ESC

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------------------
// | OSFN |  Q  |  W  |  E  |  R   |  T   |                |  Y  |  U   |  I  |  O  |  P  |  [  |
// | LESC |  A  |  S  |  D  |  F   |  G   |                |  H  |  J   |  K  |  L  |  ;  |  '  |
// | SHFT |  Z  |  X  |  C  |  V   |  B   |                |  N  |  M   |  ,  |  .  |  /  |  \  |
//              |  [  |  ]  | GUI  | SPC  | BSPC |   | TAB | ENT | LESC |  -  |  =  |
//                          | NSYM | LESC | LALT |         | GRV | SFT  |
//                         bindings = <
//    &kp TAB   &kp Q &kp W &kp E &kp R &kp T                                 &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
//    &mt LCTRL ESC   &kp A &kp S &kp D &kp F &kp G                                 &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
//    &kp LSHFT &kp Z &kp X &kp C &kp V &kp B                                 &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
//              &kp LBRC &kp RBRC &kp LGUI &kp SPACE &kp BSPC        &kp RET &kp TAB &kp GRV &kp MINS &kp EQL
//                         &kp LEFT_SHIFT &kp LEFT_ALT &mkp LCLK     &kp RIGHT_ALT &kp RIGHT_SHIFT
              
//              >;
                        bindings = <
   &kp TAB 
              
             >;
                                //    &mo 1 &mt HYPER                   &mo 2 &kp RALT
                        sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
                };
        };
};
