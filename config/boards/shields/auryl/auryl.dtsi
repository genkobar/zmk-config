#include <dt-bindings/zmk/matrix_transform.h>

/ {
    chosen {
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &default_transform;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <1>;
        rows = <1>;
// | SW6  | SW5  | SW4  | SW3  | SW2  | SW1  |                 | SW1  | SW2  | SW3  | SW4  | SW5  | SW6  |
// | SW12 | SW11 | SW10 | SW9  | SW8  | SW7  |                 | SW7  | SW8  | SW9  | SW10 | SW11 | SW12 |
// | SW18 | SW17 | SW16 | SW15 | SW14 | SW13 |                 | SW13 | SW14 | SW15 | SW16 | SW17 | SW18 |
//               | SW22 | SW21 |                                             | SW21 | SW22 |
//                             | SW20 | SW19 | SW23 |   | SW23 | SW19 | SW20 | 
//                             | SW26 | SW25 | SW24 |    (PIM) | SW25 | SW26 |
        map = <
RC(0,0)
        >;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        label = "KSCAN";

        diode-direction = "col2row";
        row-gpios
            = <&pro_micro 21 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // Row A from the schematic file
            , <&pro_micro 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // Row B from the schematic file
            , <&pro_micro 19 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // Row C from the schematic file
            , <&pro_micro 18 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // Row D from the schematic file
            ;
    };

    left_encoder: encoder_left {
      compatible = "alps,ec11";
      label = "LEFT_ENCODER";
      a-gpios = <&pro_micro_a 1 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
      b-gpios = <&pro_micro_d 0 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
      resolution = <4>;
    };

    right_encoder: encoder_right {
      compatible = "alps,ec11";
      label = "RIGHT_ENCODER";
      a-gpios = <&pro_micro_d 1 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
      b-gpios = <&pro_micro_a 0 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
      resolution = <4>;
    };

    sensors {
      compatible = "zmk,keymap-sensors";
      sensors = <&left_encoder &right_encoder>;
    };
};

&pro_micro_i2c {
    status = "okay";

    trackball_pim447@a {
        compatible = "pimoroni,trackball_pim447";
        reg = <0xa>;
        label = "TRACKBALL_PIM447";
    };
};
